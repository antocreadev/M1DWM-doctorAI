name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, lancementDB, jobs-deploy ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        
    - name: Lint
      run: |
        cd frontend
        npm run lint || true  # Continue on error if lint fails

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        
    - name: Build application
      run: |
        cd frontend
        npm run build
      
    - name: Set up Google Cloud SDK
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Configure Docker to use Google Cloud
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
        
    - name: Build and push frontend Docker image
      run: |
        cd frontend
        docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mediassist-images/frontend:${{ github.sha }} .
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mediassist-images/frontend:${{ github.sha }}
        
        # Tag as latest
        docker tag ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mediassist-images/frontend:${{ github.sha }} \
                  ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mediassist-images/frontend:latest
        docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mediassist-images/frontend:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Set up Google Cloud SDK
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: mediassist-frontend
        image: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mediassist-images/frontend:${{ github.sha }}
        region: ${{ secrets.GCP_REGION }}
        env_vars: |
          NODE_ENV=production
          NEXT_PUBLIC_API_URL=https://mediassist-backend-with-sql-bv5bumqn3a-ew.a.run.app
    
    - name: Post-deployment check
      run: |
        echo "Deployed frontend to production environment."
        echo "Running accessibility check..."
        SERVICE_URL=$(gcloud run services describe mediassist-frontend --region ${{ secrets.GCP_REGION }} --format='value(status.url)')
        if [[ -n "$SERVICE_URL" ]]; then
          echo "Service URL: $SERVICE_URL"
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" $SERVICE_URL || echo "failed")
          if [[ "$STATUS_CODE" == "200" ]]; then
            echo "✅ Frontend is accessible."
          else
            echo "⚠️ Frontend returned status $STATUS_CODE. Check logs for details."
          fi
        else
          echo "⚠️ Could not retrieve service URL."
        fi